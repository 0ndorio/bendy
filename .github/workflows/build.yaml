name: CI

on: [pull_request, push]

env:
  RUSTFLAGS: -D warnings
  RUST_LOG: info
  RUST_BACKTRACE: short

jobs:
  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt
          override: true

      - run: cargo +nightly fmt --all -- --check

  linting:
    name: Run Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-bendy-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo +nightly clippy --all

  test:
    name: Test Rust ${{ matrix.rust }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        rust:
          - stable
          - beta
          - nightly
          - 1.36.0                                # MSRV (stable alloc)
        exclude:
          - { rust: 1.36.0, os: windows-latest }  # Backtrace on Windows Requires 1.38.0

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ matrix.os }}-bendy-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Target Directory
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ matrix.os }}-bendy-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          components: clippy
          override: true

      - name: Info
        run: |
          rustup --version
          cargo --version
          cargo clippy --version

      - name: Test - No default features
        run: cargo test --all --verbose --no-default-features

      - name: Test - Default Features
        run: cargo test --all --verbose

      - name: Test - Serde Feature
        run: cargo test --all --verbose --features serde

